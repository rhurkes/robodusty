<!DOCTYPE html>
<html>
<head>
	<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
	<script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.10.1/jquery-ui.min.js"></script>
	<!-- TODO license for speak.js syntensity.com/static/espeak.html -->
	<!-- http://www.html5rocks.com/en/tutorials/workers/basics/ -->
	<!-- https://github.com/mattytemple/speak-js -->
	<script src="speakGenerator.js"></script>
	<script src="speakWorker.js"></script>
	<script src="speakClient.js"></script>
	<link rel="stylesheet" type="text/css" href="jquery-ui.min.css">
	<link href='http://fonts.googleapis.com/css?family=Rationale' rel='stylesheet' type='text/css'>
	<style type="text/css">
		body {
			margin: 0;
			padding: 0;
			overflow: hidden;
		}
		.iemMessage {
			font-size: .5em;
		}
		#messages ol {
			list-style: none;
			margin: 0;
			padding: 0;
		}
		#messages li.TOR {
			background: red;
		}
		#messages li.SVR {
			background: yellow;
		}
		#messages li.SPC {
			background: blue;
		}
		#controlbar {
			height: 45px;
			background: #000;
		}
		#display {
			width: 100%;
		}
		#clock {
			font-family: 'Rationale', sans-serif;
			color: red;
			background: #000;
			height: 40px;
			line-height: 40px;
			font-size: 2.2em;
			width: 100px;
		}
		#controlbar > div {
			float: left;
			position: relative;
			top: 3px;
			margin-left: 10px;
			text-transform: uppercase;
		}
		#cimss {
			display: none;
		}
	</style>
</head>
<body>
	<div id="controlbar">
		<div id="clock"><span style="position:absolute; top:-4px; left: 4px;">23:56Z</span></div>
		<div id="options">Options</div>
		<div id="addpanel">Add Panel</div>
		<div id="test">Test espeak</div>
	</div>
	<div id="display">
		<div id="messages"><ol></ol></div>
		<div id="optionsDialog">
			<ol>
				<li>
					<div>Audio alerts:</div><div id="audioAlertsOn"></div><div id="audioAlertsOff"></div>
				</li>
			</ol>
		</div>
	</div>
	<script>
	var lastSeqNum = 0;
	var iemTimer = null;
	var iemTimerDelay = 30000;
	var alerts = [];
	
	function padZero(number) {
		return (number < 10) ? '0' + number : number;
	}
	
	function dynamicSort(property) {
		var sortOrder = 1;
		if(property[0] === "-") {
			sortOrder = -1;
			property = property.substr(1, property.length - 1);
		}
		return function (a,b) {
			var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;
			return result * sortOrder;
		}
	}
	
	function stripHtml(htmlText) {
		//myString.replace(/<(?:.|\n)*?>/gm, '');
		//jQuery(html).text();
		var tmp = document.createElement('div');
		tmp.innerHTML = htmlText;
		return tmp.textcontent || tmp.innerText;
	}
	
	function dedupe() { }
	
	function speakText(spText, lae) {
		spAmp = 100;
		spGap = 0;
		spPitch = 30;
		spSpeed =  160;
		if (lae) {
			$('audio#eas')[0].play();
			var audioDelay = setTimeout(function() { speak(spText, { amplitude: spAmp, wordgap: spGap, pitch: spPitch, speed: spSpeed }); }, 6000);
		}
		else {
			speak(spText, { amplitude: spAmp, wordgap: spGap, pitch: spPitch, speed: spSpeed });
		}
	}
	
	function getIemMessages() {
		var url = 'http://mesonet.agron.iastate.edu/iembot-json/room/botstalk?seqnum=' + lastSeqNum + '&callback=?';
		$.getJSON(url, null, function(data) {
			var alerts = false;
			var tmpCode = '';
			var lastSpcMessage = '';
			$.each(data.messages, function() {
				var tmpMessage = $(this)[0];
				if (tmpMessage.product_id.length > 0) {
					var tmpProductData = tmpMessage.product_id.split('-');
					var tmpList = $('#messages li:eq(0)');
					if (tmpProductData.length > 0)
						tmpList.data('timestamp', tmpProductData[0]);
					if (tmpProductData.length > 1)
						tmpList.data('wmo', tmpProductData[1]);
					if (tmpProductData.length > 2)
						tmpList.data('wmoheader', tmpProductData[2]);
					if (tmpProductData.length > 3)
						tmpList.data('afospil', tmpProductData[3]);
					tmpList.data('product_id', tmpMessage.product_id);
					
					if (tmpProductData[3] !== null && tmpProductData[3].length > 0) {
						tmpCode = tmpProductData[3].substring(0, 3);
					}
					
					if (tmpProductData[1] === 'KWNS') {
						if (lastSpcMessage === tmpMessage.product_id) return true;
						lastSpcMessage = tmpMessage.product_id;
						tmpCode += 'SPC';
						// TODO make this better
					}
					
					if (tmpCode === 'TOR') {
						alerts = true;
					}
				}

				$('#messages > ol').prepend('<li class="' + tmpCode + '"><span class="iemMessage">' + tmpMessage.ts + 'Z</span>&nbsp;<span class="iemMessage">' +  tmpMessage.message + '</span></li>');
			});
		});
			
		if (data.messages.length > 0) {
			tmpLastSeqNum = data.messages[data.messages.length - 1].seqnum;
			if (!isNaN(tmpLastSeqNum)) {
				lastSeqNum = tmpLastSeqNum;
			}
		}
	}
	
	$(document).ready(function() {
		// Initialize control buttons
		$('#options').button({ });
		$('#addpanel').button({ });
		$('#test').button({ });
		$('#test').click(function() {
			speakText('this is a test', true);
		});
		
		// Options
		$('#options').click(function() {
			$('#optionsDialog').dialog();
		});
		
		// Clock
		function updateClock() {
			var tmpDate = new Date();
			var tmpTime = padZero(tmpDate.getUTCHours()) + ':' + padZero(tmpDate.getUTCMinutes()) + 'Z';
			$('#clock > span').text(tmpTime);
		}
		updateClock()
		var clockTimer = setInterval(function() { updateClock(); }, 1000);
		
		// IEM stuff
		$('#messages').dialog( {
			width: 800,
			height: 200,
			title: 'IEM Messages',
			close: function() { clearInterval(iemTimer); }
		});
		getIemMessages();
		iemTimer = setInterval(function() { getIemMessages(); }, iemTimerDelay);
		
		// SPC outlook
		function changeSpcOutlookImage(element, type) {
			var tmpUrl = 'http://www.spc.noaa.gov/products/outlook/';
			
			switch (type) {
				case 'torn':
					tmpUrl += 'day1probotlk_torn.gif';
					break;
				case 'hail':
					tmpUrl += 'day1probotlk_hail.gif';
					break;
				case 'wind':
					tmpUrl += 'day1probotlk_wind.gif';
					break;
				case 'otlk':
				default:
					tmpUrl += 'day1otlk.gif';
					break;
			}
			
			element.find('img').attr('src', tmpUrl);
		}
	});
	</script>
	<div id="audio"></div>
	<audio id="eas">
		<source src="http://www.capbreak.com/nws_alert_test_tone.mp3" type="audio/mpeg">
	</audio>
</body>
</html>